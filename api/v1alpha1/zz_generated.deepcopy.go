//go:build !ignore_autogenerated

// DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func (in *PodConfigMapConfig) DeepCopyInto(out *PodConfigMapConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

func (in *PodConfigMapConfig) DeepCopy() *PodConfigMapConfig {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfig)
	in.DeepCopyInto(out)
	return out
}

func (in *PodConfigMapConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *PodConfigMapConfigList) DeepCopyInto(out *PodConfigMapConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PodConfigMapConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

func (in *PodConfigMapConfigList) DeepCopy() *PodConfigMapConfigList {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfigList)
	in.DeepCopyInto(out)
	return out
}

func (in *PodConfigMapConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *PodConfigMapConfigSpec) DeepCopyInto(out *PodConfigMapConfigSpec) {
	*out = *in
	if in.LabelsToInclude != nil {
		in, out := &in.LabelsToInclude, &out.LabelsToInclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AnnotationsToInclude != nil {
		in, out := &in.AnnotationsToInclude, &out.AnnotationsToInclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

func (in *PodConfigMapConfigSpec) DeepCopy() *PodConfigMapConfigSpec {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfigSpec)
	in.DeepCopyInto(out)
	return out
}

func (in *PodConfigMapConfigStatus) DeepCopyInto(out *PodConfigMapConfigStatus) {
	*out = *in
}

func (in *PodConfigMapConfigStatus) DeepCopy() *PodConfigMapConfigStatus {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfigStatus)
	in.DeepCopyInto(out)
	return out
}
