//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBPFConfig) DeepCopyInto(out *EBPFConfig) {
	*out = *in
	if in.SyscallMonitoring != nil {
		in, out := &in.SyscallMonitoring, &out.SyscallMonitoring
		*out = new(SyscallMonitoringConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.L4Firewall != nil {
		in, out := &in.L4Firewall, &out.L4Firewall
		*out = new(L4FirewallConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MetricsExport != nil {
		in, out := &in.MetricsExport, &out.MetricsExport
		*out = new(MetricsExportConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBPFConfig.
func (in *EBPFConfig) DeepCopy() *EBPFConfig {
	if in == nil {
		return nil
	}
	out := new(EBPFConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L4FirewallConfig) DeepCopyInto(out *L4FirewallConfig) {
	*out = *in
	if in.AllowedPorts != nil {
		in, out := &in.AllowedPorts, &out.AllowedPorts
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.BlockedPorts != nil {
		in, out := &in.BlockedPorts, &out.BlockedPorts
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L4FirewallConfig.
func (in *L4FirewallConfig) DeepCopy() *L4FirewallConfig {
	if in == nil {
		return nil
	}
	out := new(L4FirewallConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsExportConfig) DeepCopyInto(out *MetricsExportConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsExportConfig.
func (in *MetricsExportConfig) DeepCopy() *MetricsExportConfig {
	if in == nil {
		return nil
	}
	out := new(MetricsExportConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodConfigMapConfig) DeepCopyInto(out *PodConfigMapConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodConfigMapConfig.
func (in *PodConfigMapConfig) DeepCopy() *PodConfigMapConfig {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PodConfigMapConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodConfigMapConfigList) DeepCopyInto(out *PodConfigMapConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PodConfigMapConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodConfigMapConfigList.
func (in *PodConfigMapConfigList) DeepCopy() *PodConfigMapConfigList {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PodConfigMapConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodConfigMapConfigSpec) DeepCopyInto(out *PodConfigMapConfigSpec) {
	*out = *in
	if in.LabelsToInclude != nil {
		in, out := &in.LabelsToInclude, &out.LabelsToInclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AnnotationsToInclude != nil {
		in, out := &in.AnnotationsToInclude, &out.AnnotationsToInclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.EBPFConfig != nil {
		in, out := &in.EBPFConfig, &out.EBPFConfig
		*out = new(EBPFConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodConfigMapConfigSpec.
func (in *PodConfigMapConfigSpec) DeepCopy() *PodConfigMapConfigSpec {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodConfigMapConfigStatus) DeepCopyInto(out *PodConfigMapConfigStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodConfigMapConfigStatus.
func (in *PodConfigMapConfigStatus) DeepCopy() *PodConfigMapConfigStatus {
	if in == nil {
		return nil
	}
	out := new(PodConfigMapConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyscallMonitoringConfig) DeepCopyInto(out *SyscallMonitoringConfig) {
	*out = *in
	if in.SyscallNames != nil {
		in, out := &in.SyscallNames, &out.SyscallNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyscallMonitoringConfig.
func (in *SyscallMonitoringConfig) DeepCopy() *SyscallMonitoringConfig {
	if in == nil {
		return nil
	}
	out := new(SyscallMonitoringConfig)
	in.DeepCopyInto(out)
	return out
}
